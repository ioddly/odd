// init.odd - Basic language functionality
[module [odd core]]

def(not lambda(x) {
  =(x #f)
})

defsyntax(let x e) {
  // let(x 1) { x } => [[lambda [x] x] 1]
  if(not(=(length(x 4)))) {
    syntax-error(x "Expected exactly 3 arguments to let")
  }

  def(name list-ref(x 1))
  def(value list-ref(x 2))
  def(body list-ref(x 3))

  if(not(symbol?(name))) {
    syntax-error(x "Expected first argument to let to be a symbol" name)
  }

  list(list('lambda name synclo(body e list(name))) synclo(value e))
}

def(qq-list lambda(lst) {
  if(pair?(lst)) {
    
  } {

  }
})

[public]

